[{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"Introduction to Jellyfisher","text":"input data follow specific structures samples, phylogeny, subclonal compositions. Jellyfisher package includes example data set based following publication: Lahtinen, ., Lavikka, K., Virtanen, ., et al. “Evolutionary states trajectories characterized distinct pathways stratify patients ovarian high-grade serous carcinoma.” Cancer Cell 41, 1103–1117.e12 (2023). DOI: 10.1016/j.ccell.2023.04.017.","code":"data(jellyfisher_example_tables)"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"samples","dir":"Articles","previous_headings":"Input data","what":"Samples","title":"Introduction to Jellyfisher","text":"sample (string): specifies unique identifier sample. displayName (string, optional): allows specifying custom name sample. column omitted, sample column used display name. rank (integer): specifies position sample Jellyfish plot. example, different stages disease can ranked chronological order: diagnosis (1), interval (2), relapse (3). zeroth rank reserved root sample tree. Ranks can integer, unused ranks automatically excluded plot. rank column absent, ranks assigned based sample’s depth sample tree. parent (string): identifies parent sample entry. Samples without specified parent treated children imaginary root sample.","code":"head(jellyfisher_example_tables$samples, 25) #>                    sample displayName rank               parent patient #> 35       EOC69_pOme1_DNA1       pOme1    1                        EOC69 #> 36       EOC69_pOva1_DNA2       pOva1    1                        EOC69 #> 37      EOC69_r1Vag1_DNA1      r1Vag1   10                        EOC69 #> 262     EOC495_pLNL1_DNA1       pLNL1    1                       EOC495 #> 263     EOC495_pLNL2_DNA1       pLNL2    1                       EOC495 #> 264      EOC495_pLNR_DNA1        pLNR    1                       EOC495 #> 265    EOC495_pOvaL6_DNA1      pOvaL6    1                       EOC495 #> 266    EOC495_pOvaL7_DNA1      pOvaL7    1                       EOC495 #> 267     EOC495_pPerL_DNA1       pPerL    1                       EOC495 #> 322      EOC677_pAsc_DNA1        pAsc    1                       EOC677 #> 323      EOC677_pPer1_DNA       pPer1    1                       EOC677 #> 324      EOC677_r2Asc_DNA       r2Asc   11     EOC677_rAsc_DNA4  EOC677 #> 325      EOC677_rAsc_DNA4        rAsc    9     EOC677_pAsc_DNA1  EOC677 #> 368  EOC809_p2Bow1_c_DNA2    p2Bow1_c    3                       EOC809 #> 369  EOC809_p2Ome1_c_DNA1    p2Ome1_c    3                       EOC809 #> 370 EOC809_p2OvaL1_c_DNA6   p2OvaL1_c    3                       EOC809 #> 371 EOC809_p2Per1_cO_DNA2   p2Per1_cO    3                       EOC809 #> 372    EOC809_r1Bow1_DNA1      r1Bow1   10 EOC809_p2Bow1_c_DNA2  EOC809"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"phylogeny","dir":"Articles","previous_headings":"Input data","what":"Phylogeny","title":"Introduction to Jellyfisher","text":"subclone (string): specifies subclone IDs, can string. parent (string): designates parent subclone. subclone without parent considered root phylogeny. color (string, optional): specifies color subclone. column omitted, colors generated automatically. branchLength (number): specifies length branch leading subclone. length may based , example, number unique mutations subclone. branch length shown Jellyfish plot’s legend bar chart. also used generating phylogeny-aware color scheme.","code":"head(jellyfisher_example_tables$phylogeny, 25) #>     subclone parent   color branchLength patient #> 44         1     -1 #cccccc         2742   EOC69 #> 45         2     12 #a6cee3          478   EOC69 #> 46         5      9 #ff99ff           68   EOC69 #> 47         6      5 #fdbf6f          244   EOC69 #> 48         8      1 #bbbb77         2433   EOC69 #> 49         9      8 #cf8d30          313   EOC69 #> 50        11      8 #ff7f00          868   EOC69 #> 51        12      1 #3de4c5         4762   EOC69 #> 52        13      9 #ff1aff         1017   EOC69 #> 420        1     -1 #cccccc         1426  EOC495 #> 421        2      5 #a6cee3          184  EOC495 #> 422        3      6 #b2df8a          246  EOC495 #> 423        4      1 #cab2d6         2874  EOC495 #> 424        5      7 #ff99ff          864  EOC495 #> 425        6      5 #fdbf6f          154  EOC495 #> 426        7      1 #fb9a99          179  EOC495 #> 427        8      7 #bbbb77          631  EOC495 #> 428        9      4 #cf8d30          415  EOC495 #> 510        1     -1 #cccccc         4961  EOC677 #> 511        2      1 #a6cee3          239  EOC677 #> 512        4      5 #cab2d6          437  EOC677 #> 513        5     10 #ff99ff         1802  EOC677 #> 514        6      9 #fdbf6f          979  EOC677 #> 515        9     10 #cf8d30          223  EOC677 #> 516       10      1 #41ae76          314  EOC677"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"subclonal-compositions","dir":"Articles","previous_headings":"Input data","what":"Subclonal compositions","title":"Introduction to Jellyfisher","text":"Subclonal compositions specified tidy format, row represents subclone sample. sample (string): specifies sample ID. subclone (string): specifies subclone ID. clonalPrevalence (number): specifies clonal prevalence subclone sample. clonal prevalence proportion subclone sample. clonal prevalences sample must sum 1.","code":"head(jellyfisher_example_tables$compositions, 25) #>                  sample subclone clonalPrevalence patient #> 98     EOC69_pOme1_DNA1        5           0.2250   EOC69 #> 99     EOC69_pOme1_DNA1        6           0.0965   EOC69 #> 100    EOC69_pOme1_DNA1       13           0.6660   EOC69 #> 101    EOC69_pOva1_DNA2        6           0.4175   EOC69 #> 102    EOC69_pOva1_DNA2       11           0.5225   EOC69 #> 103    EOC69_pOva1_DNA2       13           0.0360   EOC69 #> 104   EOC69_r1Vag1_DNA1        2           0.3845   EOC69 #> 105   EOC69_r1Vag1_DNA1       12           0.5970   EOC69 #> 902   EOC495_pLNL1_DNA1        4           0.5575  EOC495 #> 903   EOC495_pLNL1_DNA1        9           0.4405  EOC495 #> 904   EOC495_pLNL2_DNA1        4           0.4635  EOC495 #> 905   EOC495_pLNL2_DNA1        9           0.5345  EOC495 #> 906    EOC495_pLNR_DNA1        1           0.1595  EOC495 #> 907    EOC495_pLNR_DNA1        4           0.5060  EOC495 #> 908    EOC495_pLNR_DNA1        5           0.0350  EOC495 #> 909    EOC495_pLNR_DNA1        9           0.2950  EOC495 #> 910  EOC495_pOvaL6_DNA1        3           0.5320  EOC495 #> 911  EOC495_pOvaL6_DNA1        5           0.0665  EOC495 #> 912  EOC495_pOvaL6_DNA1        6           0.3995  EOC495 #> 913  EOC495_pOvaL7_DNA1        2           0.5440  EOC495 #> 914  EOC495_pOvaL7_DNA1        5           0.4390  EOC495 #> 915   EOC495_pPerL_DNA1        1           0.1155  EOC495 #> 916   EOC495_pPerL_DNA1        8           0.8850  EOC495 #> 1085   EOC677_pAsc_DNA1        2           0.3180  EOC677 #> 1086   EOC677_pAsc_DNA1        9           0.2440  EOC677"},{"path":[]},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"basic-plotting","dir":"Articles","previous_headings":"Plotting","what":"Basic plotting","title":"Introduction to Jellyfisher","text":"three tables passed jellyfisher function named list. function generates interactive Jellyfish plot based input data. data set contains multiple patients, Jellyfisher htmlwidget shows navigation buttons switch patients.","code":"jellyfisher(jellyfisher_example_tables,             width = \"100%\", height = 500)"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"plotting-with-custom-options","dir":"Articles","previous_headings":"Plotting","what":"Plotting with custom options","title":"Introduction to Jellyfisher","text":"","code":"jellyfisher(jellyfisher_example_tables,             options = list(               sampleHeight = 70,               sampleTakenGuide = \"none\",               tentacleWidth = 3,               showLegend = FALSE             ),             width = \"100%\", height = 500)"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"plotting-a-single-patient","dir":"Articles","previous_headings":"Plotting","what":"Plotting a single patient","title":"Introduction to Jellyfisher","text":"plotting multiple patients, Jellyfisher shows buttons (Previous Next) navigate patients. data contains one patient, buttons hidden. package also provides select_patients function filter data set ease.","code":"jellyfisher_example_tables |>   select_patients(\"EOC677\") |>   jellyfisher(width = \"100%\", height = 500)"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"adjusting-the-sample-tree-structures","dir":"Articles","previous_headings":"Plotting","what":"Adjusting the sample tree structures","title":"Introduction to Jellyfisher","text":"sample trees example data set constructed follows: “sample, checked whether earlier time point included exactly one sample anatomical location. sample existed, assigned parent; otherwise, inferred root used parent.” However, mechanistic approach may always produce credible sample trees.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"changing-parent","dir":"Articles","previous_headings":"Plotting > Adjusting the sample tree structures","what":"Changing parent","title":"Introduction to Jellyfisher","text":"r1Bow1 (bowel) sample following jellyfish plot derived earlier bowel sample p2Bow1_c, traces subclone 12. Using set_parents function, can adjust parent r1Bow1 sample p2Per1_cO (peritoneum), possible source metastasis due proximity. high prevalence subclone 12 sample suggests likely source metastasis r1Bow1 sample.","code":"jellyfisher_example_tables |>   select_patients(\"EOC809\") |>   jellyfisher(width = \"100%\", height = 600) jellyfisher_example_tables |>   select_patients(\"EOC809\") |>   set_parents(list(\"EOC809_r1Bow1_DNA1\" = \"EOC809_p2Per1_cO_DNA2\")) |>   jellyfisher(width = \"100%\", height = 600)"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"changing-topology","dir":"Articles","previous_headings":"Plotting > Adjusting the sample tree structures","what":"Changing topology","title":"Introduction to Jellyfisher","text":"ranks (columns) can indicate time points samples acquired, can also used simply show sample’s depth sample tree. instance, following plot shows samples rank, indicating diagnostic samples acquired time. However, one can argue LN (lymph node) samples represent later development disease, thus, placed later rank. can remove existing ranks, define new parent-child relationships, let Jellyfisher assign ranks based sample tree depth.","code":"jellyfisher_example_tables |>   select_patients(\"EOC495\") |>   jellyfisher(width = \"100%\", height = 600) tables <- jellyfisher_example_tables |>   select_patients(\"EOC495\")  # Remove existing ranks. The rank will be assigned automatically based # on samples depth in the sample tree. tables$samples$rank <- NA  tables |>   set_parents(list(\"EOC495_pLNL1_DNA1\" = \"EOC495_pLNR_DNA1\",                    \"EOC495_pLNL2_DNA1\" = \"EOC495_pLNL1_DNA1\")) |>   jellyfisher(width = \"100%\", height = 500)"},{"path":"https://hautaniemilab.github.io/jellyfisher/articles/introduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to Jellyfisher","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] jellyfisher_0.0.0.9000 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.3         knitr_1.49        rlang_1.1.4       #>  [5] xfun_0.50         stringi_1.8.4     generics_0.1.3    textshaping_0.4.1 #>  [9] jsonlite_1.8.9    glue_1.8.0        htmltools_0.5.8.1 ragg_1.3.3        #> [13] sass_0.4.9        rmarkdown_2.29    tibble_3.2.1      evaluate_1.0.3    #> [17] jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       lifecycle_1.0.4   #> [21] stringr_1.5.1     compiler_4.4.2    dplyr_1.1.4       fs_1.6.5          #> [25] pkgconfig_2.0.3   htmlwidgets_1.6.4 systemfonts_1.1.0 digest_0.6.37     #> [29] R6_2.5.1          tidyselect_1.2.1  pillar_1.10.1     magrittr_2.0.3    #> [33] bslib_0.8.0       tools_4.4.2       pkgdown_2.1.1     cachem_1.1.0      #> [37] desc_1.4.3"},{"path":"https://hautaniemilab.github.io/jellyfisher/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kari Lavikka. Author, maintainer.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lavikka K (2025). jellyfisher: Visualizing Tumor Evolution Jellyfish Plots R. R package version 0.0.0.9000, https://hautaniemilab.github.io/jellyfisher/, https://github.com/HautaniemiLab/jellyfisher.","code":"@Manual{,   title = {jellyfisher: Visualizing Tumor Evolution with Jellyfish Plots in R},   author = {Kari Lavikka},   year = {2025},   note = {R package version 0.0.0.9000, https://hautaniemilab.github.io/jellyfisher/},   url = {https://github.com/HautaniemiLab/jellyfisher}, }"},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"id_-jellyfisher-visualizing-tumor-evolution-with-jellyfish-plots-in-r","dir":"","previous_headings":"","what":"Visualizing Tumor Evolution with Jellyfish Plots in R","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"Jellyfisher R package visualizing tumor evolution subclonal compositions using Jellyfish plots. package based Jellyfish visualization tool, bringing functionality R users. Jellyfisher supports ClonEvol results plain data frames, making compatible various tools workflows. package still development API may change future. Stay tuned!","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"","code":"# Install Devtools install.packages(\"devtools\")  # Install Jellyfisher devtools::install_github(\"HautaniemiLab/jellyfisher\", build_vignettes = TRUE)"},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"Jellyfisher designed work data frames ClonEvol results.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"plotting-data-frames","dir":"","previous_headings":"Usage","what":"Plotting Data Frames","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"input data follow specific structures samples, phylogeny, subclonal compositions, described Jellyfish documentation, vignette, jellyfisher function’s documentation.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"example","dir":"","previous_headings":"Usage > Plotting Data Frames","what":"Example","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"","code":"library(jellyfisher)  # Plot the bundled example data jellyfisher(jellyfisher_example_tables)"},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"plotting-clonevol-results","dir":"","previous_headings":"Usage","what":"Plotting ClonEvol Results","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"Jellyfisher provides straightforward way visualize ClonEvol results using extract_tables_from_clonevol function. function returns list data frames can pass jellyfisher function. N.B., ClonEvol reports clonal prevalences confidence intervals. function extracts mean values uses prevalence values.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"example-1","dir":"","previous_headings":"Usage > Plotting ClonEvol Results","what":"Example","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"","code":"library(clonevol) library(jellyfisher)  # Run ClonEvol. Check the ClonEvol documentation for details. y <- infer.clonal.models(...)  # Plot the results extract_tables_from_clonevol(y, model = 1)) |>   jellyfisher()"},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"setting-parent-child-relationships-of-samples","dir":"","previous_headings":"Usage","what":"Setting Parent-Child Relationships of Samples","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"default, samples explicit parent children inferred root sample. can customize parent-child relationships modifying parent column samples data frame plotting. can also modify relationships using set_parents function. example, three samples, , B, C, following relationships default: explicit parents, can customize relationships:","code":"Root    / | \\   A  B  C tables |>   set_parents(list(     # The parent of C is B     C = \"B\"   ) |>   jellyfisher() Root    /  \\   A    B         \\          C"},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"Jellyfisher thin wrapper Jellyfish visualization tool. Jellyfish included git submodule tools/jellyfish/ directory. build Jellyfish JavaScript dependency, run update--build.sh script tools/ directory. R code autogenerated Jellyfish JavaScript code using generate-R-code.mjs script, run building Jellyfish dependency.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Visualizing Tumor Evolution with Jellyfish Plots in R","text":"Copyright (c) 2025 Kari Lavikka. MIT license, see LICENSE details. Jellyfisher developed Systems Biology Drug Resistance Cancer group University Helsinki. project received funding European Union’s Horizon 2020 research innovation programme grant agreement . 965193 (DECIDER) . 847912 (RESCUER).","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/extract_tables_from_clonevol.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract samples, phylogeny, and subclonal compositions from ClonEvol results — extract_tables_from_clonevol","title":"Extract samples, phylogeny, and subclonal compositions from ClonEvol results — extract_tables_from_clonevol","text":"Extracts data frames can used create Jellyfish plot.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/extract_tables_from_clonevol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract samples, phylogeny, and subclonal compositions from ClonEvol results — extract_tables_from_clonevol","text":"","code":"extract_tables_from_clonevol(y, model = 1, explicit_parents = list())"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/extract_tables_from_clonevol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract samples, phylogeny, and subclonal compositions from ClonEvol results — extract_tables_from_clonevol","text":"y ClonEvol object model model extract ","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/extract_tables_from_clonevol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract samples, phylogeny, and subclonal compositions from ClonEvol results — extract_tables_from_clonevol","text":"named list three data frames: samples, phylogeny, compositions","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for jellyfisher — jellyfisher-shiny","title":"Shiny bindings for jellyfisher — jellyfisher-shiny","text":"Output render functions using jellyfisher within Shiny applications interactive Rmd documents.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for jellyfisher — jellyfisher-shiny","text":"","code":"jellyfisherOutput(outputId, width = \"100%\", height = \"400px\")  renderJellyfisher(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for jellyfisher — jellyfisher-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates jellyfisher env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Jellyfish plot — jellyfisher","title":"Creates a Jellyfish plot — jellyfisher","text":"Creates Jellyfish plot samples, phylogeny, subclonal compositions.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Jellyfish plot — jellyfisher","text":"","code":"jellyfisher(   tables,   options = list(),   ranks = NULL,   controls = \"closed\",   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Jellyfish plot — jellyfisher","text":"tables named list data frames. list must contain following elements: samples data frame sample data. expected columns : sample specifies unique identifier sample. (string) displayName allows specifying custom name sample. column omitted, sample column used display name. (string, optional) rank specifies position sample Jellyfish plot. example, different stages disease can ranked chronological order: diagnosis (1), interval (2), relapse (3). zeroth rank reserved root sample tree. Ranks can integer, unused ranks automatically excluded plot. rank column (integer) parent identifies parent sample entry. Samples without specified parent treated children imaginary root sample. (string) phylogeny data frame phylogeny data. expected columns : subclone specifies subclone IDs, can string. (string) parent designates parent subclone. subclone without parent considered root phylogeny. (string) color specifies color subclone. column omitted, colors generated automatically. (string, optional) branchLength specifies length branch leading subclone. length may based , example, number unique mutations subclone. branch length shown Jellyfish plot's legend bar chart. also used generating phylogeny-aware color scheme. (number) compositions data frame subclonal compositions. expected columns : sample specifies sample ID. (string) subclone specifies subclone ID. (string) clonalPrevalence specifies clonal prevalence subclone sample. clonal prevalence proportion subclone sample. clonal prevalences sample must sum 1. (number) options named list options configure plot. Available options: bellTipShape shape bell tip. 0 sharp tip, 1 blunt tip. Defaults 0.1. bellTipSpread much spread nested bell tips. 0 spread, 1 full spread. Defaults 0.5. bellStrokeWidth width strokes bell. Defaults 1. bellPlateauPos bell fully appeared plateau starts. Defaults 0.75. sampleHeight Height real sample nodes Defaults 110. sampleWidth Width sample nodes Defaults 90. inferredSampleHeight Height inferred sample nodes Defaults 120. gapHeight Height gaps samples. Gaps routes tentacle bundles. Defaults 60. sampleSpacing Vertical space samples Defaults 60. columnSpacing Horizontal space columns Defaults 90. tentacleWidth Width tentacles pixels Defaults 2. tentacleSpacing Space tentacles bundle, pixels Defaults 5. inOutCPDistance Relative distance tentacle control points edge sample node Defaults 0.3. bundleCPDistance Relative distance tentacle bundle's control points. higher value, longer individual tentacles stay together diverging. Defaults 0.6. sampleFontSize Font size sample labels Defaults 12. showLegend Whether show legend Defaults TRUE. phylogenyColorScheme Whether use color scheme based phylogeny Defaults TRUE. phylogenyHueOffset Offset hue phylogeny color scheme. automatically generated hues liking, can adjust hue offset get different color scheme. Defaults 0. sampleTakenGuide Type \"sample taken\" guide. \"none\" guides, \"line\" faint dashed line samples, \"text\" line, text label one samples. Defaults \"text\". controls optional parameter set initial state controls. Can \"open\", \"closed\", \"hidden\". width width widget height height widget elementId optional element ID widget","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a Jellyfish plot — jellyfisher","text":"format data frames described examples Jellyfish documentation: https://github.com/HautaniemiLab/jellyfish?tab=readme-ov-file#input-data","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Jellyfish plot — jellyfisher","text":"","code":"# Plot the bundled example data jellyfisher(jellyfish_example_tables,             options = list(               sampleHeight = 70,               sampleTakenGuide = \"none\",               showLegend = FALSE             )) #> Error: object 'jellyfish_example_tables' not found"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher_example_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Jellyfisher example data — jellyfisher_example_tables","title":"Jellyfisher example data — jellyfisher_example_tables","text":"Example data based following publication: Lahtinen , Lavikka K, Virtanen , et al. Evolutionary states trajectories characterized distinct pathways stratify patients ovarian high grade serous carcinoma. Cancer Cell. 2023;41(6):1103-1117.e12. doi:10.1016/j.ccell.2023.04.017","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher_example_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jellyfisher example data — jellyfisher_example_tables","text":"","code":"jellyfisher_example_tables"},{"path":[]},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher_example_tables.html","id":"jellyfisher-example-tables","dir":"Reference","previous_headings":"","what":"jellyfisher_example_tables","title":"Jellyfisher example data — jellyfisher_example_tables","text":"named list data frames containing following tables: samples data frame sample data. Columns : sample specifies unique identifier sample. (string) displayName allows specifying custom name sample. column omitted, sample column used display name. (string, optional) rank specifies position sample Jellyfish plot. example, different stages disease can ranked chronological order: diagnosis (1), interval (2), relapse (3). zeroth rank reserved root sample tree. Ranks can integer, unused ranks automatically excluded plot. rank column (integer) parent identifies parent sample entry. Samples without specified parent treated children imaginary root sample. (string) phylogeny data frame phylogeny data. Columns : subclone specifies subclone IDs, can string. (string) parent designates parent subclone. subclone without parent considered root phylogeny. (string) color specifies color subclone. column omitted, colors generated automatically. (string, optional) branchLength specifies length branch leading subclone. length may based , example, number unique mutations subclone. branch length shown Jellyfish plot's legend bar chart. also used generating phylogeny-aware color scheme. (number) compositions data frame subclonal compositions. Columns : sample specifies sample ID. (string) subclone specifies subclone ID. (string) clonalPrevalence specifies clonal prevalence subclone sample. clonal prevalence proportion subclone sample. clonal prevalences sample must sum 1. (number)","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/jellyfisher_example_tables.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Jellyfisher example data — jellyfisher_example_tables","text":"https://github.com/HautaniemiLab/jellyfish/tree/main/data","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/select_patients.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Jellyfish tables by patient — select_patients","title":"Filter Jellyfish tables by patient — select_patients","text":"Given list tables, filter patient.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/select_patients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Jellyfish tables by patient — select_patients","text":"","code":"select_patients(tables, patient)"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/select_patients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Jellyfish tables by patient — select_patients","text":"tables list tables (samples, phylogeny, compositions) patient patient patients filter ","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/select_patients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Jellyfish tables by patient — select_patients","text":"list tables filtered patient","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/set_parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parents for samples — set_parents","title":"Set parents for samples — set_parents","text":"Given list jellyfish input tables named list parents sample, set parent sample.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/set_parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parents for samples — set_parents","text":"","code":"set_parents(tables, parents, unset_missing = FALSE)"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/set_parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parents for samples — set_parents","text":"tables list tables (samples, phylogeny, compositions) parents named list parents sample unset_missing TRUE, unset parent samples parent list","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/set_parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parents for samples — set_parents","text":"list tables parents set sample","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/set_parents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parents for samples — set_parents","text":"","code":"jellyfisher_example_tables |>   select_patients(\"EOC809\") |>   set_parents(list(\"EOC809_r1Bow1_DNA1\" = \"EOC809_p2Per1_cO_DNA2\")) |>   jellyfisher() #> Error: object 'jellyfisher_example_tables' not found"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/validate_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Jellyfish tables — validate_tables","title":"Validate Jellyfish tables — validate_tables","text":"Superficially validate tables correct format.","code":""},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/validate_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Jellyfish tables — validate_tables","text":"","code":"validate_tables(tables)"},{"path":"https://hautaniemilab.github.io/jellyfisher/reference/validate_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Jellyfish tables — validate_tables","text":"tables list tables (samples, phylogeny, compositions)","code":""}]
